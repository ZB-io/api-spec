# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /funds-confirmation-consents_post for http method type POST 
# RoostTestHash=db407f0790
# 
# 

# ********RoostGPT********
Feature: Funds Confirmation Consents

  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def REQUEST_HEADERS = { 'Authorization': '#(AUTH_TOKEN)', 'x-fapi-auth-date': '#(FAPI_AUTH_DATE)', 'x-fapi-customer-ip-address': '#(FAPI_CUSTOMER_IP_ADDRESS)', 'x-fapi-interaction-id': '#(FAPI_INTERACTION_ID)', 'x-customer-user-agent': '#(CUSTOMER_USER_AGENT)' }
  * configure headers = REQUEST_HEADERS
  * def DEBTOR_ACCOUNT = { 'SchemeName': '#(SCHEME_NAME)', 'Identification': '#(IDENTIFICATION)', 'Name': '#(NAME)', 'SecondaryIdentification': '#(SECONDARY_IDENTIFICATION)' }
  * def DATA_OBJECT = { 'ExpirationDateTime': '#(EXPIRATION_DATE_TIME)', 'DebtorAccount': DEBTOR_ACCOUNT }

  Background:
    * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
    * def FAPI_AUTH_DATE = karate.properties['FAPI_AUTH_DATE']
    * def FAPI_CUSTOMER_IP_ADDRESS = karate.properties['FAPI_CUSTOMER_IP_ADDRESS']
    * def FAPI_INTERACTION_ID = karate.properties['FAPI_INTERACTION_ID']
    * def CUSTOMER_USER_AGENT = karate.properties['CUSTOMER_USER_AGENT']
    * def SCHEME_NAME = karate.properties['SCHEME_NAME']
    * def IDENTIFICATION = karate.properties['IDENTIFICATION']
    * def NAME = karate.properties['NAME']
    * def SECONDARY_IDENTIFICATION = karate.properties['SECONDARY_IDENTIFICATION']
    * def EXPIRATION_DATE_TIME = karate.properties['EXPIRATION_DATE_TIME']

  Scenario: Create Funds Confirmation Consent and Test CRUD apis
    Given path '/funds-confirmation-consents'
    And request DATA_OBJECT
    When method post
    Then status 201
    
  Scenario: Validate server Response
    And match response.Data contains { 'ConsentId': '#string', 'CreationDateTime': '#string', 'Status': '#string', 'StatusUpdateDateTime': '#string', 'ExpirationDateTime': '#string', 'DebtorAccount': '#object' }
    And match response == { 'Data': '#object', 'Links': '#object' }
