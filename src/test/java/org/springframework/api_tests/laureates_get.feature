# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=ff433d7857
# 
# 

# ********RoostGPT********
Feature: Nobel Prize Laureates API Testing

Background:
  * def basePath = '/2.1/laureates'
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080') 
  * url urlBase

Scenario: Validate that valid request returns Laureate details
  * path basePath
  * header Authorization = karate.properties['AUTH_TOKEN']
  * params { 'offset' : 1, 'limit' : 5 }
  And method get
  * status 200
  And match response == { "laureates": '#[]', "meta": '#object' }


Scenario: Validate bad request returns error message 
  * path basePath
  * header Authorization = karate.properties['AUTH_TOKEN']
  * params { 'birthDate' : 'Invalid Date' }
  And method get
  * status 400
  And match response == { "code": "400", "message": "There is not Laureate born that date" }

Scenario: Validate request with invalid url returns Not Found error message
  * path '/2.1/InvalidUrl'
  * header Authorization = karate.properties['AUTH_TOKEN']
  And method get
  * status 404
  And match response == { "code": "404", "message": "There is not Laureate born that date" }

Scenario: Validate request with unprocessable entity returns error message 
  * path basePath
  * header Authorization = karate.properties['AUTH_TOKEN']
  * params { 'nobelPrizeYear' : 'Invalid Year' }
  And method get
  * status 422
  And match response == { "code": "404", "message": "There is not Laureate born that date" }
