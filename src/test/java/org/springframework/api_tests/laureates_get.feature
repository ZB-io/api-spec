# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=ff433d7857
# 
# 

# ********RoostGPT********

Feature: Nobel Prize Laureates API Testing

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Get laureates details with valid parameters
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param ID = <ID>
    And param name = <name>
    And param gender = <gender>
    And param motivation = <motivation>
    And param affiliation = <affiliation>
    And param residence = <residence>
    And param birthDate = <birthDate>
    And param birthDateTo = <birthDateTo>
    And param deathDate = <deathDate>
    And param deathDateTo = <deathDateTo>
    And param foundedDate = <foundedDate>
    And param birthCity = <birthCity>
    And param birthCountry = <birthCountry>
    And param birthContinent = <birthContinent>
    And param deathCity = <deathCity>
    And param deathCountry = <deathCountry>
    And param deathContinent = <deathContinent>
    And param foundedCity = <foundedCity>
    And param foundedCountry = <foundedCountry>
    And param foundedContinent = <foundedContinent>
    And param HeadquartersCity = <HeadquartersCity>
    And param HeadquartersCountry = <HeadquartersCountry>
    And param HeadquartersContinent = <HeadquartersContinent>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    And header Authorization = authToken

    When method get
    Then status 200
    And match response contains {offset: '#number', limit: '#number', sort: '#string', ID: '#number', name: '#string', gender: '#string', motivation: '#string', affiliation: '#string', residence: '#string', birthDate: '#string', birthDateTo: '#string', deathDate: '#string', deathDateTo: '#string', foundedDate: '#string', birthCity: '#string', birthCountry: '#string', birthContinent: '#string', deathCity: '#string', deathCountry: '#string', deathContinent: '#string', foundedCity: '#string', foundedCountry: '#string', foundedContinent: '#string', HeadquartersCity: '#string', HeadquartersCountry: '#string', HeadquartersContinent: '#string', nobelPrizeYear: '#number', yearTo: '#number', nobelPrizeCategory: '#string', format: '#string', csvLang: '#string'}

    Examples:
      | offset | limit | sort | ID | name | gender | motivation | affiliation | residence | birthDate | birthDateTo | deathDate | deathDateTo | foundedDate | birthCity | birthCountry | birthContinent | deathCity | deathCountry | deathContinent | foundedCity | foundedCountry | foundedContinent | HeadquartersCity | HeadquartersCountry | HeadquartersContinent | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang |
      | 1      | 5     | 'asc' | 1 | 'John' | 'male'| 'N/A' | 'N/A' | 'N/A' | '1945-01-01' | '2005-01-01' | '2005-01-01' | '2015-01-01' | '2000-01-01' | 'New York' | 'USA' | 'North America' | 'Chicago' | 'USA' | 'North America' | 'Chicago' | 'USA' | 'North America' | 'Chicago' | 'USA' | 'North America' | 2005 | 2010 | 'Peace' | 'json' | 'en' |

