# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
@karate-options(tags = '@smoke')
Feature: Nobel Prizes API

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
  * url 'http://localhost:8080/2.1/nobelPrizes'

Scenario Outline: Verify status codes for the API with different inputs 
  Given path '/'
  And param offset = <offset>
  And param limit = <limit>
  And param nobelPrizeYear = <nobelPrizeYear>
  And param yearTo = <yearTo>
  And param nobelPrizeCategory = <nobelPrizeCategory>
  And header Authorization = 'Bearer ' + AUTH_TOKEN
  When method get
  Then status <statusCode>
  And match response == <expectedBody>

Examples:
| limit | offset | nobelPrizeYear | yearTo | nobelPrizeCategory | expectedBody | statusCode |
| 1    | 1   | 2000 | 2010 | 'phy' | '#object' | 200 |
| 1    | 1   | 1800 | 1805 | 'phy' | '#object' | 400 |
| 1    | 1   | 1950 | 1960 | 'xyz' | '#object' | 422 |
| 1    | 1   | 2025 | 2030 | 'econ' | '#object' | 404 |

Scenario: Check invalid authorization token 
  Given path '/'
  And param offset = 1
  And param limit = 1
  And param nobelPrizeYear = 1995
  And param yearTo = 2005
  And param nobelPrizeCategory = 'phy'
  And header Authorization = 'Bearer INVALID_TOKEN'
  When method get
  Then status 401

@karate-options(tags = '@smoke')
Scenario: Check missing authorization token 
  Given path '/'
  And param offset = 1
  And param limit = 1
  And param nobelPrizeYear = 1995
  And param yearTo = 2005
  And param nobelPrizeCategory = 'phy'
  When method get
  Then status 401
