# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /laureate/{laureateID}_get for http method type GET 
# RoostTestHash=81e2a40d4b
# 
# 

# ********RoostGPT********
Feature: Get Nobel Prize Laureate Information

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.get('AUTH_TOKEN', '{{$processEnvironment.AUTH_TOKEN}}')

Scenario: Get laureate information for a valid laureate ID
  Given path '/2.1/laureate/123'
  And header Authorization = 'Bearer ' + authToken
  When method GET
  Then status 200
  And match header Content-Type contains 'application/json'
  And match response.laureate.id == 123
  And match response.laureate.laureateIfPerson.knownName.en == '#string'
  And match response.laureate.laureateIfPerson.givenName.en == '#string'  
  And match response.laureate.laureateIfPerson.familyName.en == '#string'
  And match response.laureate.laureateIfPerson.fullName.en == '#string'
  And match response.laureate.laureateIfPerson.filename == '#string'
  And match response.laureate.laureateIfPerson.gender == '#string'
  And match response.laureate.laureateIfPerson.birth.date == '#regex \\d{4}-\\d{2}-\\d{2}'
  And match response.laureate.nobelPrizes == '#[_ >= 1]'
  And match each response.laureate.nobelPrizes contains { awardYear: '#number', category: '#object', categoryFullName: '#object', sortOrder: '#string', portion: '#string', dateAwarded: '#regex \\d{4}-\\d{2}-\\d{2}', prizeStatus: '#string', motivation: '#object', prizeAmount: '#number', prizeAmountAdjusted: '#number', affiliations: '#array', residences: '##array', links: '##array' }

Scenario: Get laureate information for an invalid laureate ID
  Given path '/2.1/laureate/999999'
  And header Authorization = 'Bearer ' + authToken  
  When method GET
  Then status 404
  And match header Content-Type contains 'application/json'
  And match response == { code: '404', message: 'There is not Laureate born that date' }

Scenario: Get laureate information without authorization token
  Given path '/2.1/laureate/123' 
  When method GET
  Then status 401
  And match header Content-Type contains 'application/json'
  And match response == { code: '401', message: 'Unauthorized' }
