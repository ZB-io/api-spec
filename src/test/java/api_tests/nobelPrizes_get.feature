# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=8f84ba8c38
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario: Get all Nobel Prizes
  Given path '/2.1/nobelPrizes'
  When method GET
  Then status 200
  And match response.nobelPrizes == '#array'
  And match each response.nobelPrizes contains {awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array'}
  And match response.meta == {offset: '#number', limit: '#number', nobelPrizeYear: '##number', yearTo: '##number', nobelPrizeCategory: '##string', count: '#number'}
  And match response.links == '#array'

Scenario: Get Nobel Prizes with query parameters
  * def params = {offset: 10, limit: 5, sort: 'desc', nobelPrizeYear: 2010, yearTo: 2015, nobelPrizeCategory: 'phy', format: 'json', csvLang: 'en'}
  Given path '/2.1/nobelPrizes'
  And params params
  When method GET
  Then status 200
  And match response.nobelPrizes == '#array'
  And match each response.nobelPrizes contains {awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#string', prizeAmount: '#number', prizeAmountAdjusted: '#number', topMotivation: '#object', laureates: '#array'}
  And match response.meta == {offset: '#number', limit: '#number', nobelPrizeYear: '#number', yearTo: '#number', nobelPrizeCategory: '#string', count: '#number'}
  And match response.links == '#array'

Scenario: Get Nobel Prize with invalid query parameter
  Given path '/2.1/nobelPrizes'
  And param invalidParam = 'test'
  When method GET
  Then status 400
  And match response == {code: '#string', message: '#string'}

Scenario: Get non-existent Nobel Prize
  Given path '/2.1/nobelPrizes'
  And param nobelPrizeYear = 1900
  When method GET  
  Then status 404
  And match response == {code: '#string', message: '#string'}
