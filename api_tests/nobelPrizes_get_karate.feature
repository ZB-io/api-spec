# ********RoostGPT********

# Test generated by RoostGPT for test karate using AI Type Azure Open AI and AI Model roost-gpt4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: NobelPrizes API testing

Background: 
    * url target = $processEnvironment.API_HOST 
    * def authToken = $processEnvironment.AUTH_TOKEN 
    * def readCsv = function(file){return karate.read(file)} 
    * def payload = readCsv('nobelPrizes_get_karate.csv')

Scenario: validate API behavior with valid input payloads
    Given path '/2.1/nobelPrizes'
    And request payload
    And header Authorization = authToken

    # Test request - 1
    When method get
    Then status 200
    And match response contains {nobelPrizes:'#array'}
    And match each response.nobelPrizes contains {awardYear:'#number'}
    And match each response.nobelPrizes contains {dateAwarded:'#string'}
    And match each response.nobelPrizes contains {prizeAmount:'#number'}
    
    # Test request - 2
    And match each response.nobelPrizes[*].laureates contains {id:'#number'}
    And match each response.nobelPrizes[*].laureates contains {portion:'#string'}
    And match each response.nobelPrizes[*].laureates contains {sortOrder:'#string'}
    
    # Test request - 3
    And match response.meta contains {offset:'#number', limit:'#number'}
    And match response.meta contains {nobelPrizeYear:'#number', yearTo:'#number'}
    And match response.meta contains {nobelPrizeCategory:'#string', count:'#number'}

    # Test request - 4
    And match response.links contains {first:'#string'}
    And match response.links contains {prev:'#string', self:'#string'}
    And match response.links contains {next:'#string', last:'#string'}
