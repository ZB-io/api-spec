# ********RoostGPT********

# Test generated by RoostGPT for test karateIntegration using AI Type Azure Open AI and AI Model roost-gpt4-32k
# 
# ROOST_METHOD_HASH=803fe763f5
# ROOST_METHOD_SIG_HASH=c56a467b87
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Grant authorization\r\n' +
#     '    Given an existing account, create another account\r\n' +
#     '    When the client sends a POST request to "/authorizations"\r\n' +
#     '    Then grant access to your account and confirm access via GET request to "/authorizations"',
#   title: 'Grant authorization'
# }
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60 
      arrivalRate: 20
  payload:
    path: "GrantAuthorization.csv"
    fields:
      - accountId
      - koreUserId
      - botId

scenarios:
  - name: "Grant authorization"
    flow:
      - post:
          url: "/authToken"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          expect:
            - statusCode: 200
            - hasProperty: token
      - think: 1
      - log: "Authentication successful"
      - post:
          url: "/submitRequest"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          expect:
            - statusCode: 200
      - think: 1
      - log: "Account created successfully"
      - get:
          url: "/authToken"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          expect:
            - statusCode: 200
            - hasProperty: token
      - think: 1
      - log: "Account access confirmed successfully"
